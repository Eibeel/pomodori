{"version":3,"sources":["sound/timeOut.mp3","helpers/ChangeStatus.js","helpers/formatMinutes.js","styleComponents/GlobalStyle.js","styleComponents/theme.js","layouts/TopBar.js","layouts/Countdown.js","layouts/Mode.js","layouts/TimerScreen.js","layouts/Buttons.js","layouts/Wrapper.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","ChangeStatusButton","styled","button","_templateObject","Object","taggedTemplateLiteral","_ref","theme","colors","altColor","_ref2","textColor","ChangeStatus","_ref3","setActive","setMode","setSecondsTime","minuteFocus","minuteShort","minuteLong","handleChange","e","target","innerText","id","react_default","a","createElement","onClick","formatMinutes","seconds","concat","Math","floor","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","bgColor","font","weightBold","modeFocusColor","modeLongColor","modeShortColor","weightRegular","TopBarStyle","nav","TopBar_templateObject","TopBar","href","GitHub","color","strokeWidth","height","width","Countdown","div","Countdown_templateObject","Mode","span","Mode_templateObject","TimerScreen","TimerScreen_templateObject","Buttons","Buttons_templateObject","Wrapper","Wrapper_templateObject","App","_useState","useState","_useState2","slicedToArray","mode","_useState3","_useState4","secondsTime","_useState5","_useState6","active","_useSound","useSound","timeOutSfx","timeOut","useEffect","iterator","setInterval","clearInterval","className","styled_components_browser_esm","TopBar_TopBar","helpers_ChangeStatus","IconoirContext","iconProps","PlayOutline","PauseOutline","Undo","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.240e2ff9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/timeOut.4b3a0363.mp3\";","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst ChangeStatusButton = styled.button`\n    border: none;\n    border-radius: 6px;\n    background: none;\n    cursor: pointer;\n    font-family: 'Roboto Mono', monospace;\n    font-size: 15px;\n    margin: auto 2px;\n    padding: 6px 10px;\n    color: ${({ theme }) => theme.colors.altColor};\n    width: fit-content;\n    height: fit-content;\n    transition-duration: 200ms;\n\n\n    &:focus{\n      color: ${({ theme }) => theme.colors.textColor};\n      background-color: #273043;\n      font-weight: 500;\n    }\n`\n\nconst ChangeStatus = ({\n  setActive,\n  setMode,\n  setSecondsTime,\n  minuteFocus,\n  minuteShort,\n  minuteLong,\n}) => {\n  const handleChange = (e) => {\n    setActive(false);\n    setMode(e.target.innerText);\n\n    switch (e.target.id) {\n      case 'short':\n        setSecondsTime(minuteShort * 60);\n        break;\n      case 'long':\n        setSecondsTime(minuteLong * 60);\n        break;\n      default:\n        setSecondsTime(minuteFocus * 60);\n    }\n  };\n\n\n  return (\n    <div>\n      <ChangeStatusButton id=\"short\" onClick={handleChange}>SHORT BREAK</ChangeStatusButton>\n      <ChangeStatusButton onClick={handleChange}>FOCUS</ChangeStatusButton>\n      <ChangeStatusButton id=\"long\" onClick={handleChange}>LONG BREAK</ChangeStatusButton>\n    </div>\n  )\n};\n\nexport default ChangeStatus;\n","export const formatMinutes = (seconds) => {\n  return `\n      ${Math.floor(seconds / 60)}:${seconds % 60 > 9 ? seconds % 60 : '0' + (seconds % 60)}`;\n};\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nbody{\n    background-color: ${({ theme }) => theme.colors.bgColor};\n    height: 100vh;\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n}\n\n#title{\n    color: ${({ theme }) => theme.colors.altColor};\n    font-size: 22px;\n    font-family: 'Josefin Sans', sans-serif;\n    font-weight: ${({ theme }) => theme.font.weightBold};\n}\n\n.buttonIcon{\n    border-radius: 4px;\n    cursor: pointer;\n    transition-duration: 200ms;\n}\n\n.buttonIcon:active{\n    background-color: #273043;\n}\n`","\nconst theme = {\n    colors: {\n        altColor: '#667080',\n        bgColor: '#2F384B',\n        modeFocusColor: '#FE4D4C',\n        modeLongColor: '#00B4D8',\n        modeShortColor: '#2A9D8F',\n        textColor: '#adb5bd'\n    },\n    font: {\n        weightRegular: '400',\n        weightBold: '700'\n    },\n};\n\nexport { theme }","import React from \"react\";\nimport styled from \"styled-components\";\nimport { GitHub } from \"iconoir-react\";\n\nconst TopBarStyle = styled.nav`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.bgColor};\n  display: flex;\n  height: 64px;\n  justify-content: space-between;\n  padding: 12px 16px;\n\n  @media (min-width: 1440px) {\n    column-gap: 38rem;\n    justify-content: center;\n  }\n`\n\nexport const TopBar = () => {\n  return (\n    <TopBarStyle>\n      <span id=\"title\">Pomodori</span>\n      <a href=\"https://github.com/Eibeel/pomodori-react-app\">\n        <GitHub color=\"#667080\" strokeWidth={2} height={28} width={28}/>\n      </a>\n    </TopBarStyle>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Countdown = styled.div`\n    align-items: center;\n    background-color: ${({theme}) => theme.colors.bgColor};\n    border: solid 8px ${({theme}) => theme.colors.modeFocusColor};\n    border-radius: 100%;\n    color: ${({ theme }) => theme.colors.textColor};\n    display: flex;\n    font-family: 'Roboto Mono', monospace;\n    font-size: 40px;\n    height: 224px;\n    justify-content: center;\n    width: 224px;\n`;","import styled from \"styled-components\";\n\nexport const Mode = styled.span`\n    display: none;\n`;","\nimport styled from \"styled-components\";\n\nexport const TimerScreen = styled.div`\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    padding-top: 56px;\n    row-gap: 28px;\n`;","import styled from \"styled-components\"\n\nexport const Buttons = styled.div`\n    display: flex;\n    height: auto;\n    justify-content: space-between;\n    margin: 0 auto;\n    padding: 17rem 8px 4rem;\n    width: 200px;\n`;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: fit-content;\n`","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport useSound from 'use-sound';\nimport ChangeStatus from \"./helpers/ChangeStatus\";\nimport { formatMinutes } from \"./helpers/formatMinutes\"\nimport { GlobalStyle } from \"./styleComponents/GlobalStyle\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./styleComponents/theme\";\nimport { TopBar } from \"./layouts/TopBar\";\nimport { Countdown } from \"./layouts/Countdown\";\nimport { Mode } from \"./layouts/Mode\";\nimport { TimerScreen } from \"./layouts/TimerScreen\";\nimport { Buttons } from \"./layouts/Buttons\";\nimport { IconoirProvider, PauseOutline, PlayOutline, Undo } from 'iconoir-react';\nimport { Wrapper } from \"./layouts/Wrapper\";\nimport timeOutSfx from \"./sound/timeOut.mp3\"\n\nfunction App() {\n  const minuteFocus = 0.1;\n  const minuteShort = 5;\n  const minuteLong = 15;\n  const [mode, setMode] = useState('FOCUS');\n  const [secondsTime, setSecondsTime] = useState(minuteFocus * 60);\n  const [active, setActive] = useState(false);\n  const [timeOut] = useSound(timeOutSfx)\n\n  useEffect(() => {\n    if (active) {\n      const iterator = setInterval(() => {\n        setSecondsTime((seconds) => seconds - 1);\n      }, 1000);\n\n      if (secondsTime === 0) {\n        clearInterval(iterator);\n        setActive(false);\n        timeOut()\n      }\n\n      return () => clearInterval(iterator);\n    }\n  }, [active, secondsTime, timeOut]);\n\n  const handlePause = () => {\n    setActive(false);\n  };\n\n  const handleReset = () => {\n    setActive(false)\n    setSecondsTime(minuteFocus * 60)\n  }\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <Wrapper>\n        <TopBar />\n          <TimerScreen>\n            <Countdown>{formatMinutes(secondsTime)}</Countdown>\n            <Mode>{mode}</Mode>\n            <ChangeStatus\n              setActive={setActive}\n              setSecondsTime={setSecondsTime}\n              setMode={setMode}\n              minuteFocus={minuteFocus}\n              minuteShort={minuteShort}\n              minuteLong={minuteLong}\n            />\n          </TimerScreen>\n\n          <Buttons>\n            <IconoirProvider iconProps={\n              {color: '#adb5bd', width: '32px', height: '32px'}}>\n              <PlayOutline className=\"buttonIcon\" onClick={setActive} />\n              <PauseOutline className=\"buttonIcon\" onClick={handlePause} />\n              <Undo className=\"buttonIcon\" onClick={handleReset}/>\n            </IconoirProvider>\n          </Buttons>\n        </Wrapper>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}